FROM jenkins/jenkins:lts

USER root

# Install dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    unzip \
    lsb-release \
    ca-certificates \
    apt-transport-https \
    software-properties-common

# Add the PHP repository and install PHP 8.3
RUN curl -sSL https://packages.sury.org/php/README.txt | bash -x \
    && apt-get update \
    && apt-get install -y \
    php8.3 \
    php8.3-cli \
    php8.3-fpm \
    php8.3-mbstring \
    php8.3-xml \
    php8.3-curl \
    php8.3-zip \
    php8.3-dom

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Create Docker group and add Jenkins user
RUN groupadd docker \
    && usermod -aG docker jenkins

# Set PHP configuration - enable xml and dom extensions
RUN echo "extension=xml.so" > /etc/php/8.3/cli/conf.d/20-xml.ini \
    && echo "extension=dom.so" > /etc/php/8.3/cli/conf.d/20-dom.ini

# Install Docker
RUN curl -fsSL https://get.docker.com -o get-docker.sh && sh get-docker.sh

# Copy the application files
COPY . /var/www/html

# Set working directory
WORKDIR /var/www/html

# Ensure Docker daemon socket permissions
RUN chmod 666 /var/run/docker.sock

# Run Composer update to ensure compatibility
RUN composer update --no-interaction --prefer-dist --optimize-autoloader

# Generate application key
RUN php artisan key:generate
RUN php artisan config:cache

USER jenkins
